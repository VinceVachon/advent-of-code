const list = [
  "MVWpzTTrTFNNLtssjV",
  "hRJncnJCnhPCnBSbCQRhhQRPFHmsbHLzbLNHsjNNFmGGGsGF",
  "lSBQJBBBBcnccnQvBnPQznfrgwlrTZfDwTfWqrrpgMpw",
  "sRPgrzSgrSbfTrgspBPsDWWTmdnvdZWZwTmwvdmd",
  "tVGpCGqCGjlHcNGVNHZDmnZMWdWMWCdZDvnZ",
  "HqpQptLlclLGtlpcjHNhQqfRhrSBrrbfbrSRrsPfBSgg",
  "JpjLbQbFPBjDBBJLWltglfBfhhlcctht",
  "vNFmsdFsnmzGtWvgzhzc",
  "rqwRCCqmCTqHCnqRNTNFsJVMQSjLRbbVVbjQVLbLSV",
  "mLNNCNDwBwDnmCwnJwLRvdlqZclRccsgvcZndc",
  "QWMtVWbpVlgHHcgMHs",
  "VsTVWhThsVQWzjtQPpVWjWbpwJNCJDCzSNNCCCSfmfBCSGLL",
  "NbSfHnwDvwwfHwwQsHbWPgrsZsZjRPLRgLWhWP",
  "lmMlTGFzVmzqjGLLZWWGhrCh",
  "qFclMprqmrvbcnwDQtNQ",
  "tWQZFvvtWQWbqQQggZZLvpLrpzDrmGDmmDHPzPzHrfnHTG",
  "NMlhlTMccTCVBlRNHzJnzDDmnJmnGGBf",
  "NMMSSSSSlNVMdjdNSNNhFwTbvbLqjbtLwWQwZqgg",
  "jPwcJwRmmhJpbhNJVgDbrHzzzQzzBQHg",
  "tdZqlCnnnlvZCqlnlCSqZdFCHGDBgzsDzssBtHGLQtrHsssL",
  "TZZFSdrdlZMFZRMwMPmNcwNmwm",
  "nsdhzmDBGQWQPvJPjbbW",
  "gCgBqCNpMHTwgwqMPRJJTtWjbFRJFJvP",
  "ZlCwBrwgmzhGzDrd",
  "sTBHfcnBTnqHRvqPgFFbLtrQTPLjjm",
  "GWzpwSJSpbwbNNGJPQrrtrrrrgzLtjzm",
  "NNSlCCdplWwplCwSndnssdZfqVbHvfqc",
  "rrfHgqnlllRrDgrCbQfszMPtmzPQzFsFMQ",
  "JJLGVGjcwVcPQNNNtRPmLM",
  "WThVJJWJBdGwBpBTqDrSRCCggShqbSCb",
  "TbCqzqzmbCffzDbHRddLbdRFRS",
  "ZmvZJPjPwwWNZJGtWSDRRDFWSLhhhMVVWL",
  "ZwplGwmptNjZnjvnGGPjJlZppTrTsCczfggBgfgfggCsBrqr",
  "gMBBbfBbBMfnMsvRvWJhDsQW",
  "ZZqHLzczjjsLzlpjqTprNJvhQpRvtRJJQrtQtJ",
  "llZlzZZzPZZqsTZscHczfnSwSPSwwgSBwwSnPwnf",
  "chMtcPPgQtthqgvczhMTcCSBLBlGpsFnBnnsGvLplSFG",
  "bhRmJWDRmHSmFGBnGBps",
  "jdDZWbrDdDbbdbDrRRWwRjZRVqztCzqtcThcTQtgqVMMVzjq",
  "flNmNHgcZwTzRLzMLRPlzz",
  "nntqBJtFbbCbBVCnBtFjJjhVhLzLvRLvgRRvPvpMpvpp",
  "CgJWjJQDjgBtnGNGfcssNfcwNW",
  "MrMpMrGBznjPMGCmCrrjdwndfJLQNfdLQNdNggdL",
  "sJVcZqvhZtVqhDFFsDJslcdwgwvwQwwQNbbTbwfLLTgL",
  "RDDRcsSsstJstVDDqctszzmRmGjpjBRHPmmGHGrj",
  "tdplZtlrBGwTlLQQ",
  "sfsPPvNhWLQBhGQG",
  "zPVfzVbbMcscvVfzzNgcJHnJZgtrrndJqjJqndrL",
  "nglLjRCCHLLCnNCLHQnFNQmmVMbVmwMwlMwMMMWwBTsT",
  "cqtfcqZpzhSvvBfWwbvrbT",
  "PPqpDSqcSJPdPhtPtqZcpPtGjFRFFFNLJFGRgjFbGRNbHn",
  "gjtRSLMqLdSgLMCltTSDQcQQqhDcfcfrWDhWrr",
  "GwFZCwNzFJsPmFFmZmPPNhvDDfDWWmpvQWWfVDQppW",
  "swNGZbPBGwnCgBBlBljl",
  "BsrDsnQGwFFQQtfNTBNSffBgBt",
  "VJlhWVLlRppLQZTCbtZTttgJ",
  "ppLqqRhQdRPhqPVhdPjhljqHFnGnzFrjFFDznHFHrmwwnH",
  "CJMmmJLmlshCCdmzjHjPWztgdnjttt",
  "GwZvGwrgTcFpzHWjnT",
  "GbqrvrRwbrbGbwwZBbgfhmJMmsDJhNRfLChhCh",
  "CfgfjCLCgfgFgBhBsccswQwtsQHvBBtc",
  "SbSMGbnmDMGJWmRmDmvzwtcscWtQzsrPsvHc",
  "DbJdNpJSnMSJmpSSNVqgqgTTFVQTFqdZLq",
  "MBMCmlllPSSlmmPPjCMpPgggJcnZgntJsDvHsDZt",
  "hrNzhrRNbrhbGRbfpVLRGNqqngvnttngJctgDZJGcZvHvZnc",
  "LTTzVqppSmwdTmQW",
  "mmlBQmLbsbmRnFnwlqqprF",
  "dZScZSZSdHcNMDcJwLqRfppzpzfTpHfF",
  "JLWJLJJJdMmGtgCWjQjt",
  "PPMzpVDblwGVMMzDLLjrcrjdzjdTzLjd",
  "RRcCJRcNQRBqtCFBRJJsZWBWrjLWLHZZWndBLWjh",
  "qQQtttNqsqqtJRgqQfcpcgDcbggplGbfMp",
  "QmmSTQPmLSmjpczMJtwPzg",
  "BHHHdwdvDpllvctjZv",
  "HdrDHNfrrBDGGBhBNfHNsLFqmbRQSwqmGTLnTbSF",
  "gcMmgRQPqqPPsgjFSvctCHvHllSSHcvd",
  "JTWfZwhTwzbWwTFTrZnTrDDlDSVtVHLVShtvSHvlHL",
  "bWbWBfzTfwrWJNbTrnzfTwJFpmMQgqsFRsQGqRMggPmPBG",
  "GqCWpGGLpmpWjbSDGjGGmwCzZlvMBTrCvsrlwwswCl",
  "FPFHFVdJgQHJZnslrgvsTrwMlNgw",
  "hQVchcdcZZpZqcDG",
  "JbBRgBsRffgPPFQttQvQQMvG",
  "dmNZgmZVtGTNtNGC",
  "ZqqndLZnccqRbsrgpggsBc",
  "DDvMVmTjwFWPBBTzBF",
  "cqnggcbNNCqbQQqbZbpfQpqgRWlFhLRBhRzRPLFJhlJBfPLh",
  "dpscpcncbbqcpMVSvSrPDMsrjr",
  "hGCGZmVRRcMVsGMtmZWssmFLzbFblnnzfmqbfnzNNb",
  "wjrSPBJdSjjDrggpSJpdrSnlFNlzLTnqNLqqpbqqfMln",
  "dMwPBHPPJHDdvrBBhshWCGcsQRcHRZGV",
  "vdHwhqdtLdVnHBZbFBFzbBPS",
  "TmNCLNDpWfCNmpCgTWNTDMMZlzSggBMzlZlMBlBbZZ",
  "NQfWcscDNQrhqvGLrdhVjh",
  "lZLqzzqvgrCRcQcCLD",
  "HSVVwNTJzwVNTDQrRrrdrBwdhd",
  "TpNTzsfSTVsSpHVppzFpgvvlqZWZPMvMjPPGGsgP",
  "BCMLshLdLDDCgwFRwHHqqRqRWd",
  "QnSqQlGSfpQzTQJNTPNwNPFRFcccHc",
  "mfJJmztnQpGpvnSzGrsqgrhrBBhqjBrthL",
  "BSlmzmlvdNnlQlQQJnJHRVFVFVVqMtqRMfSfCw",
  "WBPsDPBBjfssFHMRRq",
  "DLWpGhbPjbhZrhZDnBQgdNZmQNgmvdzg",
  "WWvgBFgHWChBzgBFbjbtPtnPrsHlsRMrwRrMRR",
  "SGfNpfdGfVpVSGGppSDdwRwclMlfPMwccsntPqPw",
  "TVdpQDSpQZJpVpDQQFBbthvmWzmgvhbjzJ",
  "VVCCbzqdbzhFHvbdhZFPmhCPSNRNGSrPJfTNRSGJfGwPST",
  "LngtBnlcnDvLcTTRfTTwRtGNTG",
  "DpnBjMpLlLDQWDgvpLvbqzmbjzVjVHqbFFqbFq",
  "SbzMbNQQSDdmvqqzdSlWFpwZnvpFWWllpFww",
  "CjLPTPjjLCPtBCLJjBLPLBTFsFFgfwwpZgplpgFnWWRl",
  "nPncrBHGnmrbdmdmNN",
  "FnlblGlTTbNVLVtRvQQvgqRQBCvgNr",
  "DPMDMpMHmnzjPqDhQWvvQvhghq",
  "zMMcddznsjFTldVGlFGT",
  "cLSNGLhmRRVmlVCq",
  "HvzbQBzBMQMpQDpCSlSVZRSCqV",
  "QwWznWnTbQSMMJQHnvwbWjrhNhLFgsGNNrFLNnFNhd",
  "dBrWNQWWcTNqqnNN",
  "bPlmgRgRghlCVlbhwZccCZjZqvmqvmTTvGqmJTvqnGTGvLLJ",
  "DCDZhjllcpDMrSQS",
  "ddtNNTFTwRzGRGCwqnBMjlqMHMfqnB",
  "hDpPsQLLSprhnHVhqhVfHM",
  "QWLWDQZpgpWbQgfspGGRdcGcCcCcztTGZC",
  "GGHFdGwFlswcFtnvTfjMjBFfNBjNBZ",
  "JWmSJLPSRprWWPWVMMVQpZfBvvfQtj",
  "RzPSPDbDDhbhPDLRhCgGHHccsqGCqqtHzG",
  "dbSdptWddDMNtdFvttFclqMTZJlJTlMZqJTJTqjC",
  "BzfwRzrwPzfzLNGmZZCZBTGBqqlH",
  "hVNVQPNQQQVLPwhRrQwgWWvFdDsFWSbdWgdFSFDb",
  "hhSnmhtZSFSqZBJSSqqmJJRHPPLgHtPcGGGcWGtvvHwgvG",
  "fCMpfTQjTrzrzCQMsQdHGHvPGPwLppPRvWPLLc",
  "MdTzCsCMzNzDCTjlmNhRmRnZBllRVh",
  "RrFglccgBVVvFNvCvWlgmDbbDfQDtCdjjDbDwmZD",
  "STnMqSLHJhHHnqLqtnBndbBdfQQZDtZD",
  "GHJPTBsTSsMMSpSBHJFNlWzcvFlzsVzvzgsv",
  "lplNdrVrVrWMMVcJfcDDzbqCCpDL",
  "SSSgvBRSjggPgzvTTRHTvFnfJLbcLsCDLnCLDCcJBsJq",
  "GmHjjRwvHSjHTRjrlZrNMzVMhVrmVW",
  "gdtFtgStSbHCbHMPZrFLPLrVlrVZrP",
  "hQnjMGfDqTvzvpBjVVjPRLRRjJ",
  "QmsQmhvvMtssHtWw",
  "RNjTGSCLJCGdRqMRFvMrfzMvzz",
  "ZpcWcVDpWBmWQMZZpZDpwBcznrshtntvfvhfFtzmvnzvhf",
  "WHHHcVWgQVCbCllbgMLN",
  "ZjjdJHSdSzvcZFMhhhDqDHtthw",
  "rNTlNqVWTmRPlshsDPDlph",
  "WbTNGNmQBRQbRNQgNGmCLdvvjzcCSBqLcLnScL",
  "bZwpSpBvSHCBqNzpdFffqQft",
  "nWRnGRnVnljmlDnzdPfQfdcQPWWfNq",
  "dmRDGMMlDmnVjgMlhBSwCbCgwHbBHhvv",
  "NwqLgLBLgnwNNBGpgsQsddhhpQQg",
  "JcztcZnzVtZvnVcJMTvTJtWtppsQHGdQhhHHQsPhWdPS",
  "fJTJnMmvZvMvRDqFblNBNNjlBf",
  "drZVzZzzNWWzwwTWTZrjWcLCqnRqNnLNLqCqnsPPRL",
  "JhlBgvHBBLnwMBqDwC",
  "GmGFSHmhJSGJwgFJmwJhJhgQVWVdbSWZQzZTrWtZzjzjTz",
  "wPGRPpnzgwwGgLddFBFrnrnJdc",
  "jCsVclQWmCTrJJddrdFs",
  "lWjlCqfmlWccpGPPSgcf",
  "hCThCzTdPcPhzqTzMfVfHrhMMmhVHgVM",
  "lJSJNqwJsZBSsSBFsMprDmFmFDfDDHgHDf",
  "JNGQsSSNGsbZZZSBwZLPtdLjttnqPCbtPbjC",
  "vnlWNpbrNrpShhQDLRLB",
  "MzCjPgffVTVgCJSRQhBdRdJS",
  "VPHcfcBfTzVMTttMzMfgzMfHvrllWvlnvNvlmGwWNwwNmw",
  "BwwsqPJqwBssLlFqLRCDzWwzDGRGGWfSRG",
  "vTtmmthvpphpnNgNvvpvRrDCddDQrCQCzCDrCfnf",
  "pppccNpTVVlqssHHVzBH",
  "HWHphZWVWvMZNvpMtfJZgssffsjJgBlslJ",
  "RLmrFFnGFrFFrrFCRwCrLNPwqfjSJjqJSJBbsqjbbsblfq",
  "LnFLPPGLrGNRQPmndLzPmPmpcDcMHhcMhVHvczcpHHchcV",
  "zwqqvNDVggwqVfNQRlszFBsCCJFtFlFPsz",
  "MSrrGTZPGSSMSjPbTmtlHBBFrFHFsHlsJsct",
  "MnmMPMSZZGSZWmSjnWgfqdgVQDvnqvRDggDV",
  "SQCSBShsQnSsSJswsNpVppPPMVpGpnDVgg",
  "WWjHvmtWZrwvtzzjTTRPrRRrMVNVVGgVGpGR",
  "lTvWjWLfWwbJCQqBSlbB",
  "cjPChhswrNVtMZJjVM",
  "pfvTFvTzLBFndGTlJmVJZmNlCMGtCJ",
  "nfvFTfpbBFdSFpTLswsWDbchwHCWHrbw",
  "lNdNPLJJLHHHlpPJcvtVcsBBrrBvBqrVrC",
  "wDTbwTQRZTMWsVWtmWhhTr",
  "nzRMbSZtMQDnpzzJHLHNflHP",
  "HrwwmwcRbmwcbrrTbwwcrTJWLlPshllhLccqLhnnlljhZhjZ",
  "GMFMSNSpCBSFSdGpNFpBznLlzzhzshlGhhqPhGGL",
  "nFFSCCSSfttBdddDQNDBQpSSrbrmWJwrHfJHWJrbVwWHrgVr",
  "SdddNNCmpNNDhMswhsmbhvHM",
  "frtzqqqFjgrWfgfqtthsnvRHZRRvFlhnvRZb",
  "rtrgqzzrbWtqLGLLtBWzfGcTNCCVGpSNDppTJJVddNpPSG",
  "WWJvJvBgpHSHScQRQSVQLzqL",
  "ddZTlZGZVfQhZRLLMqsR",
  "rPfwrGGrFjjNTGNCCVBggDJHmNDvbmmpmNJJ",
  "bbGrJPRVPtfsVfFlMjBV",
  "WQzhQQQNZQCWNnQDhzWdNjFZggmlHjjmMmMFjFHpMs",
  "CzQCSWDTWhNhzWhTGJwtRRqTblwcclvP",
  "HLDvZgZldDTnLLsswMpVLn",
  "FNVQzQSPznCMmpBwCF",
  "SqfJPfttqffjJPVlhvhZZtvdVDRZ",
  "jVsLvHvvdrSjpJFsGzmnmltnml",
  "nTNTRCTBTmmmFPMJ",
  "CQnCggWQDgBrrSqHjDDfSS",
  "ZpNlrZNcmctZbcZlmcmZhhpPvPHvwBMHJPMTMHBTFJvJ",
  "zmdCnGzGRnLDjQnzPvMFVHMVMLTVwMJv",
  "GGjqssqgzCnCzQsshcffmrbNrrNZtW",
  "DNpTwhpLlWMDWNMhbJjGttJFHgDcjtjG",
  "wqQrdCdqbFtCtJtJ",
  "vffdrwfPrsmqVBBWRVlRRlTSTWSTlR",
  "ZqTCTQQTFvsDSsBDvWBd",
  "hfBLzRLtHHLDDWRRWWDNbd",
  "pHhhnPzLfJcJhzHLzZjcmwCTqTQgwBqqwg",
  "WJHgqgFqrVrqgqCHwsJHHVFZzppZFGGfTtpcfbdpzzpd",
  "RvNMQlMBhwMdMfcpbM",
  "LLRQNBDSSNSwmDDBQRBRBCHsgrgHLVnJVqLsJsnCPJ",
  "BFhGsDsDsBtsPGtQDrrMdbdrffrffbJbRt",
  "cVVqScVSWWvVWgVZjnrHJgLfdrLrnrLLLQ",
  "WmvqNZzzzZSvVzqvcccSzSmqFGCDTGBPQGDhwCDhNDCwPBQp",
  "RqTlHHTTrQqHlTqsrVDqHbrZFZwhpBhphZBFhZpDpLLLfB",
  "nSzGCGdvzdGNPBQQBfhLZfFwFN",
  "WPPPCJMtJSQMJQCCWMJslRrrRgrMRbRqVqqTRR",
  "BMtfLsLZfTPmCtGWZrZqJNJqvpZdWr",
  "bRwgHhhRhbbSRbjSglcgwHHJWPcJdPrnNWrnqnWVVqpdnq",
  "bgjlSgDljHhjgwMPCLPFDMFPGGBC",
  "zJWjczcWjSWghZgzgSSSZflTqwlfqTTbnQwhdTnMdl",
  "NrGVCmNpHFPsrJFbFQMJbJdQTn",
  "JvrtpHHmrCGJCJmNvNpVCsHVgzWgWDDcjjgjDRStWWDLSgzz",
  "HzdFsBBVsfnTfsPmPtDcZqtMhDDz",
  "wrjjRQLlwwwrJQLQbCrbwlJDSlcSDtPZmPSDclWDtcDqWh",
  "RwgprLbNLrLbCCpRCrJLRLFfsGTNNZHBZnnBvvfffnvd",
  "MlqqlWZclnPtZtDSSvwQQjgQpNQSRM",
  "rLJTsBrsJBhshTNNwSQBWNvNgNSg",
  "JbbbChCHsJzHzbWdGHThlFnnPqlPlGPPGncPtFlD",
  "WcMVvwNNvjRcwTQwVcpNRcspPCFtbPztbCTFmtPtCJtbCzmz",
  "grrgDhrnDLnLrdfdLZlLZhmCqzlCbtJlSSStFmttqsJJ",
  "GHHDdgnLDDhrrrgZrZgLNVVVVcRNvcwjWvpWGcRs",
  "qhGhPSJtGhGtJtvNjnJjnvmNQQmj",
  "sRBFlbZsrdBRRGbVGBDwDMDQwQwMNDjjjVNV",
  "CzCflffbBszdBCbdbrtLcfhhgHLGgPccLSPh",
  "zShhHFzgJWFVFFHFHhRPNjwqPLPtLbtrbwVjjr",
  "ssnvTmvCDfpCZTnsfCqwNLNPwbJqNJPwrjZw",
  "vDvpmcnmnBDnsnJTJmQWMHMWzScFggRFRFSW",
  "nnVHHPLrnpssLnrpLRnHtHrjJcCdzCjcDzMzdqwRdjdDcJ",
  "WWTGQQzSGWlTmBbDJJjwMJjcvvlDjw",
  "TGTWBTWmTbgzghZhgzBgpVNrZPPfntfNrVLNNnZP",
  "TqhQnqqLnnqddttNqQWdtqQmppSSFFClRmzmFZFLSmSlFF",
  "BcHjGclVPPBrVrcjrGGDrMgcmmRJbRCFzpZmSDRpRZJJmRzz",
  "ccGjMgvPvsHMgvBHWlhQdqwtllwNdThs",
  "WjddwRGgHRRdMbrwHRwWjHDtDZplslnJnZrsDvCprJPJ",
  "QSLLFqQBffCFststlFnn",
  "CSSmSqzmVVjWMdMjVWgT",
  "lTfQRhVpRzjThpRQTTTlvHrvBvHnPMHgHqHJvn",
  "cGDctCwCdDCGSFcJsFJsFBvgnMBrHvvrqngHgmgssg",
  "SCbSDSFScNpfbRVVJf",
  "RrwmdwMVjMjMTghDWNTJDpWfWG",
  "SbPvNbvbSsPbSvZsPJtJWhHpGGGgJWgJ",
  "lSFvsLNcqzqLrwnFQMnVdmnn",
  "FgCJFTWntWTFtPLmJmmQJmCMMpljWZBwlGMljjjlwvwBvZ",
  "SDSbVbdScSDzbLZMBrjlZpVrZp",
  "ccsSDhSDffzbLNscfcfDcgqhPgTntqmnQmCgtgQCTJ",
  "VnCnrHnPPrCwHmVWtqfMQQqzCqffCZ",
  "DDbDcJJJbpJDGppFpqGZRWfGfddzMWtfWM",
  "tTTglDcgFjwNPHPPwHlH",
  "bMGbqqgPqqVVMGnbVqSMmRfPcJmCTPDDLJDTCmDm",
  "FFjjZvFRsFCctmtvtJWD",
  "wwFhHjQjwQhZrFjQbngglGbRMnSzgbRH",
  "GPTTJSgTPrPPmcTPpdJsGGGjqbRvqlztqlRqMzGjRv",
  "LwnfWLNwwHHQwHnjbbMMjWttqtMmMj",
  "mhwfBDhnQTpJBcBJps",
  "HQQHwMfwlltzMlVljQhVjjHPPPFGPFcCGprPTPPfDrDcGf",
  "pRLdvRvJgqLRBSJCcvFnCDTPTcTGnT",
  "LBLSJbRSLSqbSdBdgJRRqRbwjHHblQttlwtwhzpjMlwhpw",
  "NWLNSNSDtgSgghgdcwccmwGntwclnT",
  "FRCQzJRsvfVVjvzFJfQnffwCcmdwmHmmHmTwmCmdGBcq",
  "sjfJvjfzPRPzvPPVFMssvSLhSSWrMZnSDNrDDhSLZZ",
  "FvLpSLtCfPCWhRSZZMZJSW",
  "jbbjwbHjQmHjHsQrQFMnwTnJznwRzhJRnNTM",
  "gVrjqGqjgrgsFGLDtDBLLfLB",
  "cgTvRWWLVScRWflNJJDfVJmVlG",
  "nPPnnmqjmZHCHBHFdfwNsDhzzfJznhsfhw",
  "bddmQqQjpdFCQWtLQMMSvMMQRS",
  "wjnmPwCgjPnRlwnmvmvvPnTwbSSLLvsLDWdbbWzvsLzWbzbz",
  "NqrGqFHqJlfhhJGbszdWQzzLNtQDzz",
  "FfHFpphrJqJrpGBffcTnBjCnVTMjMRCnVljT",
  "SrfSJGJpSgMprMHdhBGhsdsshdGsmm",
  "nRTRPvQllQlblwvCjTwLTnvBqdhmHDPVsmDmdqshDVhNsP",
  "lbRFHvRwlnlLbnbjLbLjLCzggSpWfMFzSZpzZFJJWpJr",
  "vNLlFldlvPtHFPHQRt",
  "jcpRsScDgshzjqzfVStntBTPMTnmWttntMpp",
  "fSssgVjDsbqSVbCJClLRJLCZRZZb",
  "wnHmCJccDDcrNnrNMRDtTzpTlMpTzpBp",
  "PjSPPGjWjLzTjjMtzzMj",
  "hWvLLFWvHvczVcVn",
  "jgtngnnhMthcnLjMgCZvChDsmdNCvNNZDN",
  "bWqFPbFbLzRFfZBNDNNPZsNd",
  "RbJzGpzVLLLWHHQgTMwcTptQ",
  "sJBhsMWQnhhrFBsFhlQQMfrDCDpLlVCddjTdDDpqDLTLdj",
  "tZHHSRmNHcgmNzpDPJtttqjLqdpL",
  "HbNbZmcHQJbsFWvs",
  "VgPNWGbgSjGjfhRRFfzThtmtzF",
  "qLCQJBqqcPPmLHhHFz",
  "CcJvplQswNgZlNPSbS",
];

const listTwo = [
  "vJrwpWtwJgWrhcsFMMfFFhFp",
  "jqHRNqRjqzjGDLGLrsFMfFZSrLrFZsSL",
  "PmmdzqPrVvPwwTWBwg",
  "wMqvLMZHhHMvwLHjbvcjnnSBnvTQFn",
  "ttgJtRGJQctTZtZT",
  "CrZsJsPPZsGzwwsLwLmpwMDw",
]; // === 157

let prioritiesLowercase = [
  "a",
  "b",
  "c",
  "d",
  "e",
  "f",
  "g",
  "h",
  "i",
  "j",
  "k",
  "l",
  "m",
  "n",
  "o",
  "p",
  "q",
  "r",
  "s",
  "t",
  "u",
  "v",
  "w",
  "x",
  "y",
  "z",
];
let prioritiesUppercase = [
  "A",
  "B",
  "C",
  "D",
  "E",
  "F",
  "G",
  "H",
  "I",
  "J",
  "K",
  "L",
  "M",
  "N",
  "O",
  "P",
  "Q",
  "R",
  "S",
  "T",
  "U",
  "V",
  "W",
  "X",
  "Y",
  "Z",
];

const findDuplicates = (items) => {
  const arr = items.split("");
  var half_length = Math.ceil(arr.length / 2);

  const half1 = arr.slice(0, half_length);
  const half2 = arr.slice(half_length, arr.length);
  var overlap = half1.filter((v) => half2.indexOf(v) > -1);

  return Array.from(new Set(overlap));
};

const allDupes = list.map((list) => findDuplicates(list)).flat();

const points = allDupes.reduce((sum, curr) => {
  if (curr === curr.toLowerCase()) {
    return sum + prioritiesLowercase.indexOf(curr) + 1;
  } else {
    return (
      sum + prioritiesUppercase.indexOf(curr) + prioritiesLowercase.length + 1
    );
  }
}, 0);

console.log("points", points);
